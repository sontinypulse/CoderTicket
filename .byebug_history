c
availabe_ticket
reserved_tickets
n
availabe_ticket
n
reserved_tickets
n
c
msg
n
step
help
n
c
available_msg.blank?
available_msg.nil?
available_msg
n
msg
n
availabe_ticket
n
msg
n
availabe_ticket
n
msg
n
c
reserved_tickets
availabe_ticket
n
availabe_ticket
n
reserved_tickets
n
c
msg
n
params
msg
n
c
params
available_msg
n
c
params["1"]
params[1]
params
c
available_msg
n
msg
n
c
availabe_ticket
n
reserved_tickets
n
c
exception
n
ticket_type_ids
n
c
id
self.id
self
c
params
c
params
c
response.body
response
n
c
n
c
n
c
n
c
n
params
n
c
n
@user
n
c
params[:user]
params
n
c
n
@user
n
params
c
params
c
request
n
c
User.all
User.al
User.find_by_email(params[:email])
params[:email]
@user
n
params
c
params
c
root_path
response
n
c
rendered.should have_selector('section')
rendered.should have_selector('section#"card-cont"')
rendered
c
Event.all.first.name == params[:search]
Event.all.first.name
params[:search]
@events
 @events = Event.search(params[:search]).order("created_at DESC")
Event.all.first
Event.all
Event.search(params[:search]).order("created_at DESC")
n
params
c
 Event.search(params[:search]).order("created_at DESC")
n
params
c
n
params
c
n
params
c
n
params
c
params
c
params
c
params
c
params
c
Event.all
n
c
n
Event.all
n
c
params
c
params
c
@events
n
